/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.20.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { CosmWasmClient, SigningCosmWasmClient, ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { Coin, StdFee } from "@cosmjs/amino";
import { ActiveThreshold, ActiveThresholdResponse, Addr, InfoResponse, Boolean, TotalPowerAtHeightResponse, VotingPowerAtHeightResponse } from "./DaoVotingCw20Staked.types";
export interface DaoVotingCw20StakedReadOnlyInterface {
    contractAddress: string;
    stakingContract: () => Promise<Addr>;
    activeThreshold: () => Promise<ActiveThresholdResponse>;
    votingPowerAtHeight: ({ address, height }: {
        address: string;
        height?: number;
    }) => Promise<VotingPowerAtHeightResponse>;
    totalPowerAtHeight: ({ height }: {
        height?: number;
    }) => Promise<TotalPowerAtHeightResponse>;
    dao: () => Promise<Addr>;
    info: () => Promise<InfoResponse>;
    tokenContract: () => Promise<Addr>;
    isActive: () => Promise<Boolean>;
}
export declare class DaoVotingCw20StakedQueryClient implements DaoVotingCw20StakedReadOnlyInterface {
    client: CosmWasmClient;
    contractAddress: string;
    constructor(client: CosmWasmClient, contractAddress: string);
    stakingContract: () => Promise<Addr>;
    activeThreshold: () => Promise<ActiveThresholdResponse>;
    votingPowerAtHeight: ({ address, height }: {
        address: string;
        height?: number;
    }) => Promise<VotingPowerAtHeightResponse>;
    totalPowerAtHeight: ({ height }: {
        height?: number;
    }) => Promise<TotalPowerAtHeightResponse>;
    dao: () => Promise<Addr>;
    info: () => Promise<InfoResponse>;
    tokenContract: () => Promise<Addr>;
    isActive: () => Promise<Boolean>;
}
export interface DaoVotingCw20StakedInterface extends DaoVotingCw20StakedReadOnlyInterface {
    contractAddress: string;
    sender: string;
    updateActiveThreshold: ({ newThreshold }: {
        newThreshold?: ActiveThreshold;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
}
export declare class DaoVotingCw20StakedClient extends DaoVotingCw20StakedQueryClient implements DaoVotingCw20StakedInterface {
    client: SigningCosmWasmClient;
    sender: string;
    contractAddress: string;
    constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string);
    updateActiveThreshold: ({ newThreshold }: {
        newThreshold?: ActiveThreshold;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
}
